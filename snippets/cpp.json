{
  "for": {
    "prefix": "for",
    "body": [
      "for (${1:size_t} ${2:i} = ${3:0}; $2 < ${4:length}; $2++) {",
      "\t$0",
      "}"
    ],
    "description": "Code snippet rof 'for' loop"
  },
  "qt_property": {
    "prefix": "qproperty",
    "body": [
      "Q_PROPERTY(${1:PropertyType} ${2:name} READ $2 WRITE set$2 NOTIFY $2Changed);"
    ],
    "description": "Code snippet for 'for' loop"
  },
  "qtmodel": {
    "prefix": "qtmodel",
    "body": [
      "class ${1:className} : public QAbstractListModel {",
      "  Q_OBJECT",
      "  Q_PROPERTY(int count READ rowCount NOTIFY countChanged)",
      "public:",
      "  $1(QObject* parent) : QAbstractListModel(parent) {}",
      "  int rowCount(const QModelIndex &parent = QModelIndex{}) const override;",
      "  QVariant data(const QModelIndex &index, int role = Qt::DisplayRole) const override;",
      "  QHash<int, QByteArray> roleNames() const override;",
      "  Q_INVOKABLE void append();",
      "  Q_INVOKABLE void set(int index);",
      "  Q_INVOKABLE void remove(int index);",
      "  Q_SIGNALS:",
      "  void countChanged();",
      "  private:",
      "};"
    ],
    "description": "Code snippet for QAbstractListModel"
  }
}
